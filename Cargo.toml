[package]
name = "tikv"
version = "5.1.0-alpha"
authors = ["The TiKV Authors"]
description = "A distributed transactional key-value database powered by Rust and Raft"
license = "Apache-2.0"
keywords = ["KV", "distributed-systems", "raft"]
homepage = "https://tikv.org"
repository = "https://github.com/tikv/tikv/"
readme = "README.md"
edition = "2018"
publish = false

[features]
default = ["protobuf-codec", "test-engines-rocksdb", "cloud-aws", "cloud-gcp"]
tcmalloc = ["tikv_alloc/tcmalloc"]
jemalloc = ["tikv_alloc/jemalloc", "engine_rocks/jemalloc"]
mimalloc = ["tikv_alloc/mimalloc"]
snmalloc = ["tikv_alloc/snmalloc"]
portable = ["engine_rocks/portable"]
sse = ["engine_rocks/sse"]
mem-profiling = ["tikv_alloc/mem-profiling"]
failpoints = [
  "fail/failpoints",
  "raftstore/failpoints",
  "engine_rocks/failpoints"
]
cloud-aws = [
  "encryption_export/cloud-aws",
  "sst_importer/cloud-aws",
]
cloud-gcp = [
  "encryption_export/cloud-gcp",
  "sst_importer/cloud-gcp",
]
protobuf-codec = [
  "protobuf/bytes",
  "batch-system/protobuf-codec",
  "codec/protobuf-codec",
  "concurrency_manager/protobuf-codec",
  "encryption_export/protobuf-codec",
  "engine_panic/protobuf-codec",
  "engine_rocks/protobuf-codec",
  "engine_test/protobuf-codec",
  "engine_traits/protobuf-codec",
  "engine_traits_tests/protobuf-codec",
  "error_code/protobuf-codec",
  "grpcio/protobuf-codec",
  "into_other/protobuf-codec",
  "keys/protobuf-codec",
  "kvproto/protobuf-codec",
  "pd_client/protobuf-codec",
  "raft/protobuf-codec",
  "raftstore/protobuf-codec",
  "raft_log_engine/protobuf-codec",
  "security/protobuf-codec",
  "sst_importer/protobuf-codec",
  "tidb_query_aggr/protobuf-codec",
  "tidb_query_common/protobuf-codec",
  "tidb_query_datatype/protobuf-codec",
  "tidb_query_executors/protobuf-codec",
  "tidb_query_expr/protobuf-codec",
  "tipb/protobuf-codec",
  "tikv_kv/protobuf-codec",
  "tikv_util/protobuf-codec",
  "txn_types/protobuf-codec",
  "grpcio-health/protobuf-codec",
  "file_system/protobuf-codec",
  "resource_metering/protobuf-codec",
  "protobuf/bytes",
]
prost-codec = [
  "batch-system/prost-codec",
  "codec/prost-codec",
  "concurrency_manager/prost-codec",
  "encryption_export/prost-codec",
  "engine_panic/prost-codec",
  "engine_rocks/prost-codec",
  "engine_test/prost-codec",
  "engine_traits/prost-codec",
  "engine_traits_tests/prost-codec",
  "error_code/prost-codec",
  "grpcio/prost-codec",
  "into_other/prost-codec",
  "keys/prost-codec",
  "kvproto/prost-codec",
  "pd_client/prost-codec",
  "raft/prost-codec",
  "raftstore/prost-codec",
  "raft_log_engine/prost-codec",
  "security/prost-codec",
  "sst_importer/prost-codec",
  "tidb_query_aggr/prost-codec",
  "tidb_query_common/prost-codec",
  "tidb_query_datatype/prost-codec",
  "tidb_query_executors/prost-codec",
  "tidb_query_expr/prost-codec",
  "tipb/prost-codec",
  "tikv_kv/prost-codec",
  "tikv_util/prost-codec",
  "txn_types/prost-codec",
  "grpcio-health/prost-codec",
  "file_system/prost-codec",
  "resource_metering/prost-codec",
]
testexport = ["raftstore/testexport"]
test-engines-rocksdb = [
  "engine_test/test-engines-rocksdb",
]
test-engines-panic = [
  "engine_test/test-engines-panic",
]
bcc-iosnoop = [
  "file_system/bcc-iosnoop",
]
cloud-storage-grpc = ["sst_importer/cloud-storage-grpc"]
cloud-storage-dylib = ["sst_importer/cloud-storage-dylib"]

# for testing configure propegate to other crates
# https://stackoverflow.com/questions/41700543/can-we-share-test-utilites-between-crates
testing = []

[lib]
name = "tikv"

[dependencies]
anyhow = "1.0"
async-stream = "0.2"
async-trait = "0.1"
backtrace = "0.3"
batch-system = { path = "components/batch-system", default-features = false }
byteorder = "1.2"
chrono = "0.4"
codec = { path = "components/codec", default-features = false }
concurrency_manager = { path = "components/concurrency_manager", default-features = false }
online_config = { path = "components/online_config" }
crc32fast = "1.2"
crc64fast = "0.1"
crossbeam = "0.8"
encryption_export = { path = "components/encryption/export", default-features = false }
engine_panic = { path = "components/engine_panic", default-features = false }
engine_rocks = { path = "components/engine_rocks", default-features = false }
engine_test = { path = "components/engine_test", default-features = false }
engine_traits = { path = "components/engine_traits", default-features = false }
engine_traits_tests = { path = "components/engine_traits_tests", default-features = false }
error_code = { path = "components/error_code", default-features = false }
fail = "0.4"
file_system = { path = "components/file_system", default-features = false }
fs2 = "0.4"
futures = { version = "0.3", features = ["thread-pool", "compat"] }
futures-executor = "0.3.1"
futures-util = { version = "0.3.1", default-features = false, features = ["io", "async-await"] }
grpcio = { version = "0.9",  default-features = false, features = ["openssl-vendored"] }
grpcio-health = { version = "0.9", default-features = false }
hex = "0.4"
hyper-tls = "0.5"
itertools = "0.10"
openssl = "0.10"
hyper = { version = "0.14", features = ["full"] }
hyper-openssl = "0.9"
http = "0"
into_other = { path = "components/into_other", default-features = false }
keys = { path = "components/keys", default-features = false }
kvproto = { rev = "dda0a102bc6ac7371e1f99cd2797825aa210b4a0", git = "https://github.com/pingcap/kvproto.git", default-features = false }
lazy_static = "1.3"
libc = "0.2"
libloading = "0.7"
log = { version = "0.4", features = ["max_level_trace", "release_max_level_debug"] }
log_wrappers = { path = "components/log_wrappers" }
memory_trace_macros = { path = "components/memory_trace_macros" }
mime = "0.3.13"
more-asserts = "0.2"
murmur3 = "0.5.1"
nom = { version = "5.1.0", default-features = false, features = ["std"] }
notify = "4"
num_cpus = "1"
pd_client = { path = "components/pd_client", default-features = false }
pin-project = "1.0"
pnet_datalink = "0.23"
prost = "0.7"
pprof = { version = "^0.4", default-features = false, features = ["flamegraph", "protobuf"] }
protobuf = "2.8"
raft = { version = "0.6.0-alpha", default-features = false }
raftstore = { path = "components/raftstore", default-features = false }
raft_log_engine = { path = "components/raft_log_engine", default-features = false }
rand = "0.7.3"
regex = "1.3"
rev_lines = "0.2.1"
security = { path = "components/security", default-features = false }
semver = "0.11"
serde = { version = "1.0", features = ["derive"] }
serde_derive = "1.0"
serde_ignored = "0.1"
serde_json = "1.0"
slog = { version = "2.3", features = ["max_level_trace", "release_max_level_debug"] }
slog-global = { version = "0.1", git = "https://github.com/breeswish/slog-global.git", rev = "d592f88e4dbba5eb439998463054f1a44fbf17b9" }
parking_lot = "0.11"
prometheus = { version = "0.12", features = ["nightly"] }
prometheus-static-metric = "0.5"
sst_importer = { path = "components/sst_importer", default-features = false }
sysinfo = "0.16"
tempfile = "3.0"
match_template = { path = "components/match_template" }
paste = "1.0"
thiserror = "1.0"
tidb_query_datatype = { path = "components/tidb_query_datatype", default-features = false }
tidb_query_common = { path = "components/tidb_query_common", default-features = false }
tidb_query_expr = { path = "components/tidb_query_expr", default-features = false }
tidb_query_aggr = { path = "components/tidb_query_aggr", default-features = false }
tidb_query_executors = { path = "components/tidb_query_executors", default-features = false }
tikv_alloc = { path = "components/tikv_alloc" }
tikv_kv = { path = "components/tikv_kv", default-features = false }
tikv_util = { path = "components/tikv_util", default-features = false }
collections = { path = "components/collections" }
coprocessor_plugin_api = { path = "components/coprocessor_plugin_api" }
time = "0.1"
tipb = { git = "https://github.com/pingcap/tipb.git", default-features = false }
tokio = { version = "1.5", features = ["full"] }
tokio-timer = "0.2"
tokio-openssl = "0.6"
toml = "0.5"
txn_types = { path = "components/txn_types", default-features = false }
url = "2"
uuid = { version = "0.8.1", features = ["serde", "v4"] }
walkdir = "2"
yatp = { git = "https://github.com/tikv/yatp.git", branch = "master" }
resource_metering = { path = "components/resource_metering" }
seahash = "4.1.0"

[dev-dependencies]
example_plugin = { path = "components/test_coprocessor_plugin/example_plugin" } # should be a binary dependency
panic_hook = { path = "components/panic_hook" }
test_sst_importer = { path = "components/test_sst_importer", default-features = false }
test_util = { path = "components/test_util", default-features = false }
tokio = { version = "1.5", features = ["macros", "rt-multi-thread", "time"] }
zipf = "6.1.0"


[patch.crates-io]
# TODO: remove this when new raft-rs is published.
raft = { git = "https://github.com/tikv/raft-rs", branch = "master", default-features = false }
raft-proto = { git = "https://github.com/tikv/raft-rs", branch = "master", default-features = false }
protobuf = { git = "https://github.com/pingcap/rust-protobuf", rev = "82b49fea7e696fd647b5aca0a6c6ec944eab3189" }
protobuf-codegen = { git = "https://github.com/pingcap/rust-protobuf", rev = "82b49fea7e696fd647b5aca0a6c6ec944eab3189" }

# TODO: remove this replacement after rusoto_s3 truly supports virtual-host style (https://github.com/rusoto/rusoto/pull/1823).
rusoto_core = { git = "https://github.com/tikv/rusoto", branch = "gh1482-s3-addr-styles" }
rusoto_credential = { git = "https://github.com/tikv/rusoto", branch = "gh1482-s3-addr-styles" }
rusoto_kms = { git = "https://github.com/tikv/rusoto", branch = "gh1482-s3-addr-styles", features = ["serialize_structs"] }
rusoto_mock = { git = "https://github.com/tikv/rusoto", branch = "gh1482-s3-addr-styles" }
rusoto_s3 = { git = "https://github.com/tikv/rusoto", branch = "gh1482-s3-addr-styles" }
rusoto_sts = { git = "https://github.com/tikv/rusoto", branch = "gh1482-s3-addr-styles" }

[target.'cfg(target_os = "linux")'.dependencies]
procinfo = { git = "https://github.com/tikv/procinfo-rs", rev = "5125fc1a69496b73b26b3c08b6e8afc3c665a56e" }

[workspace]
# See https://github.com/rust-lang/rfcs/blob/master/text/2957-cargo-features2.md
# Without resolver = 2, using `cargo build --features x` to build `cmd`
# will _not_ propagate the feature `x` into `cmd`'s direct dependencies.
resolver = "2"
members = [
  "fuzz",
  "fuzz/fuzzer-afl",
  "fuzz/fuzzer-libfuzzer",
  "fuzz/fuzzer-honggfuzz",
  "tests",
  "cmd/tikv-server",
  "cmd/tikv-ctl",
  "components/test_backup",
  "components/test_raftstore",
  "components/test_storage",
  "components/test_coprocessor",
  "components/test_sst_importer",
  "components/test_util",
  "components/test_pd",
  "components/tikv_alloc",
  "components/match_template",
  "components/codec",
  "components/online_config",
  "components/panic_hook",
  "components/tipb_helper",
  "components/log_wrappers",
  "components/tikv_util",
  "components/tidb_query_datatype",
  "components/tidb_query_common",
  "components/tidb_query_codegen",
  "components/tidb_query_expr",
  "components/tidb_query_aggr",
  "components/tidb_query_executors",
  "components/pd_client",
  "components/external_storage",
  "components/external_storage/export",
  "components/cloud",
  "components/cloud/aws",
  "components/cloud/gcp",
  "components/backup",
  "components/keys",
  "components/sst_importer",
  "components/txn_types",
  "components/resolved_ts",
  "components/batch-system",
  "components/cdc",
  "components/raftstore",
  "components/into_other",
  "components/encryption",
  "components/encryption/export",
  "components/error_code",
  "components/concurrency_manager",
  "components/server",
  "components/file_system",
  "components/collections",
  "components/coprocessor_plugin_api",
  "components/test_coprocessor_plugin/example_plugin",
  "components/resource_metering",
]
default-members = ["cmd/tikv-server", "cmd/tikv-ctl"]

[profile.dev]
opt-level = 0
debug = 1 # required for line numbers in tests, see tikv #5049
codegen-units = 4
lto = false
incremental = true
panic = 'unwind'
debug-assertions = true
overflow-checks = false
rpath = false

[profile.release]
opt-level = 3
debug = false
codegen-units = 1
lto = "thin"
incremental = false
panic = 'unwind'
debug-assertions = false
overflow-checks = false
rpath = false

[profile.release.package.server]
opt-level = 1
codegen-units = 4

[profile.test]
opt-level = 0
debug = 1 # enable line numbers by default for easy test debugging
codegen-units = 16
lto = false
incremental = true
debug-assertions = true
overflow-checks = true
rpath = false

# The benchmark profile is identical to release, except that lto = false
[profile.bench]
opt-level = 3
debug = false
codegen-units = 1
lto = 'thin'
incremental = false
debug-assertions = false
overflow-checks = false
rpath = false
